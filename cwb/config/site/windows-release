##   -*-Makefile-*-
## 
##  IMS Open Corpus Workbench (CWB)
##  Copyright (C) 1993-2006 by IMS, University of Stuttgart
##  Copyright (C) 2007-     by the respective contributers (see file AUTHORS)
## 
##  This program is free software; you can redistribute it and/or modify it
##  under the terms of the GNU General Public License as published by the
##  Free Software Foundation; either version 2, or (at your option) any later
##  version.
## 
##  This program is distributed in the hope that it will be useful, but
##  WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
##  Public License for more details (in the file "COPYING", or available via
##  WWW at http://www.gnu.org/copyleft/gpl.html).

##
##  SITE-SPECIFIC CONFIGURATION FILE: Windows release bundle built with MSYS2
##

## Note that directories here always refer to locations on the eventual Windows
## machine where things will be installed - whereas in the "platform" config
## files, some paths may refer to MSYS2 paths.

## Test whether we are working with the "win64-msys2"platform; abort if not.
ifndef WINDOWS
$(error Building for site ''windows-release'' requires platform ''win64-msys2''. Please amend your config.mk file.)
endif

## override the RELEASE_OS set in win64-msys2
RELEASE_OS=win64

## On MSY2, we need to distinguish installing/releasing for MSYS2, versus
## installing/releasing for Windows outside of MSYS2. EXT = "external".
WINDOWS_RELEASE_EXT=1

## Override names for shared lib files. These are the ones we want on "real" Windows,
## i.e. not on MSYS. The values in win64-msys2 are for (rarely used) MSYS2 internal install.
LIBCL_SHAREDLIB = libcl.dll libcl.lib

## For a Windows release, we want as much static linking as possible to avoid 
## external DLL dependencies. libcl will still be a DLL, but one that (a) is not 
## actually used by CWB itself, (b) is itself statically linked.
## (NB. WINDOWS_STATIC is set in this platform file, since if we are installing
## within MSYS2, we *don't want* the greatest possible static linking.)
WINDOWS_STATIC=1

## Directory tree where binaries, libraries, header files and man pages will be installed
## We can use the Windows environment variable, but we will need to allow an override at 
## install time.
PREFIX = %ProgramFiles%\CorpusWorkbench

## Default registry directory (used unless -r option or CORPUS_REGISTRY variable is set)
## Note: \\\\ needed for \\ because the variable is string-embedded multiple times!
DEFAULT_REGISTRY = %ProgramFiles%\\\\CorpusWorkbench\\\\Registry
## Maintainer's note: monitor the success of the above carefully!
## A mechanism is now used to store the true default registry at install time. 
## The following variables support that. 
DEFAULT_REGISTRY_LOCFILE = default-reg.txt
DEFAULT_REGISTRY_FALLBACK = %ProgramFiles%\\\\CorpusWorkbench\\\\Registry

## Access permission for installed files (octal code for regular files)
## Windows doesn't support octal permissions. When NTFS disks are mounted in Linux, all
## files appear as having 777 -- so that's what I've gone for here.  
INST_PERM = 777

## static linking so we can distribute without a bunch of extra, non-CL DLLs;
## the additional flags below are needed to prevent function name clashes in readline/ncurses.
SITE_CFLAGS = -fcommon
SITE_LDFLAGS = -static -Wl,--allow-multiple-definition

## extra library needed to be specified if we want to link readline statically
READLINE_LIBS := $(shell pkg-config --static --libs readline) -lhistory
READLINE_DEFINES := $(shell pkg-config --static --cflags readline)

## similarly, we need to get the static libs ...
TERMCAP_LIBS    := $(shell pkg-config --static --libs ncursesw termcap)
TERMCAP_DEFINES := $(shell pkg-config --static --cflags ncursesw termcap)

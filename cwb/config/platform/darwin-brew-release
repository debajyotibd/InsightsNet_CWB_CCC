##   -*-Makefile-*-
## 
##  IMS Open Corpus Workbench (CWB)
##  Copyright (C) 1993-2006 by IMS, University of Stuttgart
##  Copyright (C) 2007-     by the respective contributers (see file AUTHORS)
## 
##  This program is free software; you can redistribute it and/or modify it
##  under the terms of the GNU General Public License as published by the
##  Free Software Foundation; either version 2, or (at your option) any later
##  version.
## 
##  This program is distributed in the hope that it will be useful, but
##  WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
##  Public License for more details (in the file "COPYING", or available via
##  WWW at http://www.gnu.org/copyleft/gpl.html).

##
##  PLATFORM CONFIGURATION FILE:
##    Self-contained binary release package for MacOS (Intel 64-bit) with 
##    prerequisite libraries statically linked into "libcl.dylib".  Static
##    versions of the prerequisite libraries are provided by HomeBrew package
##    manager.
##

##
## --- WARNING ---
## HomeBrew is not ideal for binary releases.  While statically linked libraries
## can be created, they are always compiled for the current MacOS version and 
## will NOT be compatible with earlier MacOS releases.  It is also impossible
## to cross-compile ARM binaries on an Intel CPU.
## A quick Web search suggests that there is no feasible work-around. In fact,
## HomeBrew goes out of its way to keep users from modifying compilation settings.
##

## Inherits from basic Darwin configuration
include $(TOP)/config/platform/darwin

## Make sure that Apple's gcc is used (not e.g. a fink-installed version)
CC = /usr/bin/gcc

## Make sure we're compatible with most current x86 CPUs, but optimise for Core i7.
## We would like to ensure compatibility with earlier MacOS version by specifying
##    -mmacosx-version-min=10.13
## but HomeBrew insists on building its packages for the native CPU and OS version.
CFLAGS = -Wall -O3 -arch x86_64 -march=core2 -mtune=corei7
LDFLAGS = -arch x86_64

DEPEND_CFLAGS = -Wall -O3

## HomeBrew installation prefix
HOMEBREW_ROOT = /usr/local

## Must specify static libraries explicitly so linker won't prefer .dylib versions
READLINE_DEFINES = -I$(HOMEBREW_ROOT)/opt/readline/include
READLINE_LIBS = $(HOMEBREW_ROOT)/opt/readline/lib/libreadline.a /usr/local/opt/readline/lib/libhistory.a

PCRE_DEFINES = -I$(HOMEBREW_ROOT)/opt/pcre2/include
PCRE_LIBS = $(DONT_SET_PCRE_LIBS) # disable built-in auto-configuration

## GLib must be linked dynamically against system-provided libraries and frameworks
GLIB_DEFINES = -I$(HOMEBREW_ROOT)/opt/glib/include/glib-2.0 -I$(HOMEBREW_ROOT)/opt/glib/lib/glib-2.0/include -I$(HOMEBREW_ROOT)/opt/gettext/include
GLIB_LIBS = $(DONT_SET_GLIB_LIBS) # disable built-in auto-configuration

## use runtime path to make libcl.dylib location-independent
FINALLIBINSTDIR = @rpath

## CWB binaries link to libcl.dylib via relative runpath, so release package is location-independent
LIBCL_RPATH = -Xlinker -rpath -Xlinker @executable_path/../lib

## CPU architecture and operating system used to name binary releases
RELEASE_ARCH = x86_64
RELEASE_OS = macos-$(shell sw_vers -productVersion)

## extra static libraries needed for linking against the binary release
LIBCL_EXTRA_LIBS = $(HOMEBREW_ROOT)/opt/pcre2/lib/libpcre2-8.a $(HOMEBREW_ROOT)/opt/glib/lib/libglib-2.0.a /$(HOMEBREW_ROOT)/opt/gettext/lib/libintl.a -liconv -framework CoreFoundation -framework CoreServices -framework Foundation

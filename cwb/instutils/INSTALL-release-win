
        IMS Open Corpus Workbench (CWB)
        Release 3.5

        Usage Guide for Windows Release


        FIRST STEPS

Before you install this Windows release of CWB, please note that for most
users, the recommended and best way to use CWB on Windows is by installing
and running it within the Windows Subsystem for Linux (WSL). The procedures
for using CWB within WSL are exactly the same as for CWB on actual Linux;
no special steps for Windows are needed.

The binary Windows releases are intended for certain specialised use-cases,
e.g. running a CQPweb server natively on a Windows host without the WSL 
layer. If you are not doing something along these lines, you will probably
be better advised to use WSL.

That said, this guide assumes from now on that you DO need this native
Windows binary release!

If you did not obtain this file by downloading a cwb-x.y.z-win64-x86_64.zip 
release bundle (or by building such a bundle from source using MSYS2), then
your first step is to do so.

Visit https://cwb.sourceforge.io for information and links to current files.

Once you have the release bundle, you must *unzip* it, if you have not done
so already: right-click on the .zip file and use the "Extract All..." command.

Everything is now ready to move onwards.


        INSTALLING AND/OR RUNNING CWB

There are two ways to work with the CWB Windows release:

 1)  Simply work within the unzipped download; its "bin" subdirectory
     contains the CWB programs, and by moving to or addressing the path of that
     directory on the command line (either Command Prompt or PowerShell), 
     you can run CQP and the CWB utilities.
     
     You should be able to move the unzipped directory to any location 
     you like on your system, and everything will still work (except for the
     cwb-config command, which you will not in any case need). 
     
 2)  Use the installer script to place everything in a default, expected place
     on the Windows filesystem.

For the second method, you should navigate to the unzipped folder using Windows
Explorer - i.e. to the folder that contains this INSTALL.txt file - and then
double-click on 

        install-cwb

to run a Windows batch script that will install everything to the right place
(ish). You might need to be an Administrator account to have permission
to install everything to the correct places; the script will, in this case,
attempt to prompt you for admin power before continuing. 

Note that the installer's name will display as "install-cwb.bat" if you have 
turned off the Windows "Hide File Extensions" option. If you don't know what
the preceding sentence means, you may safely ignore it.

When it runs, install-cwb will:

 - create a folder called something like C:\Program Files\CorpusWorkbench
 - put all the binary files in that folder's "bin" subdirectory
 - also copy across all available include/library files
   (which are are, as yet, untested) 
 - create a "Registry" subfolder for the standard registry,
   and record its location in the installation directory 
 - add the "bin" sub-folder to the PATH environment variable

Finally, you might want to

 - move the PDF files from the "man" sub-folder to somewhere more convenient

since "man" is not available on Windows (outside, that is, of MSYS2).

(At some point we hope to have a .msi for Windows installation, but that's not
here yet, sorry!)


        OTHER USEFUL BITS AND PIECES

(1) Choice of console

We recommend that you run CQP and the CWB utilities that print outputs from 
the corpus (e.g. cwb-scan-corpus) on the new Windows Terminal instead of 
the old, traditional console. Textual data containing anything other than 
plain ASCII characters can cause problems in the old console because the
Unix way of dealing with Unicode and the Windows way are incompatible - 
and CQP in particular is oriented around the Unix way of doing things. The new
Windows Terminal app is more modern and better maintained by Microsoft, and 
is much less likely to cause you problems when running CQP especially.

For information on the Windows Terminal app, see here:

   https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701


(2) less

On Unix, CQP uses the "less" pager to print concordances by default. 
On Windows, however, "less" is not part of the standard OS, so CQP defaults to
using the more primitive "more" pager by default.

It's therefore often useful, but not strictly necessary, to install "less".

Various releases of "less" for Windows have been made. As of 2022, the most 
up-to-date appears to be John Taylor's 

   https://github.com/jftuga/less-Windows/

Download less.exe and place it in a directory on your PATH. (The "bin" 
subdirectory of your CWB installation will do just fine.)

Now, within CQP, run this command:

   set pager "less -FRX -+S"

(the flags above are those which CQP on Unix uses by default; 
feel free to substitute your preferred settings). 

If you want to make this the default in every CQP session, add that line to
your "%UserProfile%\.cqprc" file (see CQP manual sec. 6.4).

For CWB installed within MSYS2, no download is necessary, since less is
preinstalled. However, you will still need to change the default from "more".


(3) Compression: gzip / bzip2 / xz / 7-zip

The CWB utilities, most notably cwb-encode, can use compression programs, if 
they are available, to read input data files in .gz, .bz2 or .xz format (so 
corpora do not need to be decompressed and saved on disk for indexing). This 
happens automatically, based on the file extension (e.g. .vrt.gz or .vrt.bz2)
as opposed to uncompressed .vrt). 

On Unix, the tools that can be used are "gzip", "bzip2" and "xz"; "gzip" is
ubiquitous, and the other two very common. However, getting hold of them for 
Windows can be trickier. They are available within MSYS2 and other Unix-like
environments, but standalone programs may be hard to find. If you do have 
"gzip", "bzip2", and/or "xz", and want to work with compressed files, you must
make sure the programs are findable. There are two ways to do this. First, 
you can add the programs' containing folder(s) to the PATH environment 
variable (or, equivalently, create links to the programs in a location
that is already on the path). Second, you can set the CWB_COMPRESSOR_PATH
environment variable to a directory that contains all three programs 
(or, at least, the one(s) you wish to use).

An alternative compression application to "gzip/bzip2/xz" is 7-zip, which is 
much easier to install on Windows. This is available here:

   https://www.7-zip.org/

Download and run the installer. Then, add the directory containing the "7z.exe"
program to your PATH environment variable. (On Windows 10, this can be done
by typing "environment" into the "Find a setting" box in the Settings app,
and using the dialogue that appears to locate and modify PATH for either the
system or the current user account.) This directory is normally something like:

   C:\Program Files\7-Zip

Then, set the environment variable CWB_USE_7Z. CQP, and all the utility 
programs, respect this environment variable: when it is present, they will 
not attempt to run "gzip", "bzip2" or "xz", but will instead use equivalent 
"7z" commands; when it is undefined, they follow default behaviour with the 
three separate programs.


        GETTING HELP

If you encounter problems, it's best to join the CWBdev mailing list

    http://devel.sslmit.unibo.it/mailman/listinfo/cwb

and ask your question there.

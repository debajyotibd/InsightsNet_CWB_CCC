.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CWB-MAKE-SUBCORPUS 1p"
.TH CWB-MAKE-SUBCORPUS 1p "2023-06-22" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cwb\-make\-subcorpus \- Materialize subcorpus as separately indexed corpus
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  cwb\-make\-subcorpus [options] <CORPUS> <SUBCORPUS> <datadir> \*(Aq<query>\*(Aq
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script creates a physical copy of a virtual subcorpus of a CWB-indexed corpus.  It is often more convenient to access such a subcorpus as a separately indexed \s-1CWB\s0 corpus, and may be required for software packages that are not designed to operate on subsets of a corpus.  For relatively small subcorpora, working with the physical copy will also be much more efficient.
.PP
The virtual subcorpus is a collection of textual units (any s\-attribute, specified with option \f(CW\*(C`\-S\*(C'\fR).  It is defined by a \s-1CQP\s0 query and consists of all units that contain at least one match of the query.  This approach ensures great flexibility, allowing subcorpora to be defined in terms of metadata, lexical items and even grammatical features.
.PP
\&\fBcwb-make-subcorpus\fR automatically copies all positional and structural attributes, adjusting s\-attribute regions as needed.  In particular, any regions outside the subcorpus are dropped, while regions spanning one or more text units from the subcorpus as well as other material are narrowed down to the subcorpus.  The script also convert the physical copy to a different character encoding, but it is better to use \fBcwb\-convert\-to\-utf8\fR for upgrading corpora to \s-1UTF\-8\s0 format.
.PP
There are some important \fBlimitations\fR:
.IP "\(bu" 4
The script does \fInot\fR copy alignment attributes (because it relies on \fBcwb-decode\fR, which cannot handle a\-attributes). Any alignments will be absent from the subcorpus.
.IP "\(bu" 4
Re-encoding to a different character set silently deletes invalid characters, so the content of the physical copy may no longer be identical to the virtual subcorpus.
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
.IP "\s-1CORPUS\s0" 4
.IX Item "CORPUS"
\&\s-1CWB ID\s0 of the original corpus
.IP "\s-1SUBCORPUS\s0" 4
.IX Item "SUBCORPUS"
New \s-1CWB ID\s0 for the physical copy to be created
.IP "datadir" 4
.IX Item "datadir"
New directory for \s-1CWB\s0 index files of the physical copy. This directory must not yet exist (unless overwritten with \f(CW\*(C`\-\-force\*(C'\fR).
.IP "query" 4
.IX Item "query"
A \s-1CQP\s0 query that identifies text units to be included in the virtual subcorpus. Usually enclosed in single quotation marks on the command line.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-\-registry=\fIdir\fR, \-r \fIdir\fR" 4
.IX Item "--registry=dir, -r dir"
Search the original corpus in registry directory \fIdir\fR rather than the default registry path.
.IP "\-\-output\-registry=\fIdir\fR, \-or \fIdir\fR" 4
.IX Item "--output-registry=dir, -or dir"
Create registry entry for the new corpus in \fIdir\fR. [default: same registry directory as the original corpus]
.IP "\-\-by=\fIatt\fR, \-S \fIatt\fR" 4
.IX Item "--by=att, -S att"
S\-attribute defining basic textual units for the virtual subcorpus, which consists of all such units that contain at least one match of the \s-1CQP\s0 query. [default: \f(CW\*(C`text\*(C'\fR]
.IP "\-\-charset=\fIenc\fR, \-C \fIenc\fR" 4
.IX Item "--charset=enc, -C enc"
Character encoding of the physical copy.  Any of the character encodings supported by \s-1CWB 3.5\s0 may be specified.  If different from the character encoding of the original corpus, all attributes will automatically be converted, silently deleting invalid characters. [default: same as original corpus]
.IP "\-\-memory=\fIn\fR, \-M \fIn\fR" 4
.IX Item "--memory=n, -M n"
Allow \fBcwb-make\fR to use approx. \fIn\fR MBytes of \s-1RAM\s0 for indexing.
.IP "\-\-force, \-f" 4
.IX Item "--force, -f"
Silently overwrite an existing registry entry and/or data directory.  Use with caution, as this will remove all files from an existing data directory.
.IP "\-\-verbose, \-v" 4
.IX Item "--verbose, -v"
Show progress message for each individual attribute (recommended for large corpora).
.IP "\-\-help, \-h" 4
.IX Item "--help, -h"
Display short help page.
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
\&\fBcwb-make-subcorpus\fR requires a recent version of \s-1CWB\s0 with special support in the \fBcwb-encode\fR utility, viz. \fB\s-1CWB\s0 v3.5.0\fR or newer. If you have installed multiple \s-1CWB\s0 releases on your computer, make sure that the CWB/Perl modules are configured to use an appropriate \s-1CWB\s0 version.
.PP
For efficiency reasons, character encodings are converted with the external \fBiconv\fR utility, which must be installed somewhere in the system path. Your version of \fBiconv\fR must support command line options \f(CW\*(C`\-f\*(C'\fR (source encoding), \f(CW\*(C`\-t\*(C'\fR (target encoding) and \f(CW\*(C`\-c\*(C'\fR (ignore conversion errors); it also needs to understand \s-1CWB\s0 style encoding names such as \f(CW\*(C`utf8\*(C'\fR and \f(CW\*(C`latin1\*(C'\fR. Suitable versions of \fBiconv\fR are provided e.g. by Linux and Mac \s-1OS X.\s0
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2018\-2022 Stephanie Evert [https://purl.org/stephanie.evert]
.PP
This software is provided \s-1AS IS\s0 and the author makes no warranty as to
its use and performance. You may use the software, redistribute and
modify it under the same terms as Perl itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CWB-CONVERT-TO-UTF8 1p"
.TH CWB-CONVERT-TO-UTF8 1p "2023-06-22" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cwb\-convert\-to\-utf8 \- Convert existing CWB corpus to UTF\-8 encoding
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  cwb\-convert\-to\-utf8 [options] <CORPUS> <new_datadir>
.Ve
.PP
Options:
.PP
.Vb 10
\&  \-r <dir>,              registry directory for old corpus [system default]
\&    \-\-registry=<dir>
\&  \-or <dir>,             registry directory for new corpus [same as old corpus]
\&    \-\-output\-registry=<dir>
\&  \-n <id>, \-on <id>,     CWB name of new corpus [<CORPUS>_UTF8]
\&    \-\-name=<id>, \-\-output\-name=<id>
\&  \-M <n>, \-\-memory=<n>   use ca. <n> MBytes of RAM for corpus indexing [1000]
\&  \-f, \-\-force            overwrite existing registry entry and data directory
\&  \-v, \-\-verbose          show progress message for each attribute
\&  \-h, \-\-help             display short help page
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script provides a convenient method to convert existing CWB-indexed corpora in legacy encodings (\f(CW\*(C`latin\*(C'\fR = \s-1ISO\-8859\-1\s0 etc.) into \s-1UTF\-8\s0 encoding.
.PP
\&\fBcwb\-convert\-to\-utf8\fR requires two arguments, the \s-1CWB\s0 name of the old (non\-UTF\-8) corpus and a data directory for the binary index files of the new (\s-1UTF\-8\s0) corpus. It will then automatically convert and re-index all corpus attributes and create a new registry file in the same registry directory, appending \f(CW\*(C`_UTF8\*(C'\fR to the corpus name (unless these default choices are overridden by command-line options).  For example,
.PP
.Vb 1
\&  cwb\-convert\-to\-utf8 TIGER /Corpora/CWB/TigerUTF
.Ve
.PP
would locate the corpus \f(CW\*(C`TIGER\*(C'\fR (presumably a copy of the German Tiger Treebank, encoded in \f(CW\*(C`latin1\*(C'\fR) somewhere in the default registry path, create a new registry entry \f(CW\*(C`TIGER_UTF8\*(C'\fR in the same directory, and store the re-encoded index files in the directory \fI/Corpora/CWB/TigerUTF/\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-\-registry=\fIdir\fR, \-r \fIdir\fR" 4
.IX Item "--registry=dir, -r dir"
Search the input corpus in registry directory \fIdir\fR rather than the default registry path.
.IP "\-\-output\-registry=\fIdir\fR, \-or \fIdir\fR" 4
.IX Item "--output-registry=dir, -or dir"
Create registry entry for the new corpus in \fIdir\fR rather than the same directory as the old corpus.
.IP "\-\-name=\fIid\fR, \-n \fIid\fR" 4
.IX Item "--name=id, -n id"
.PD 0
.IP "\-\-output\-name=\fIid\fR, \-on \fIid\fR" 4
.IX Item "--output-name=id, -on id"
.PD
Set the \s-1CWB\s0 name of the new corpus to \fIid\fR. The default setting append \f(CW\*(C`_UTF8\*(C'\fR to the \s-1CWB\s0 name of the input corpus.
.IP "\-\-memory=\fIn\fR, \-M \fIn\fR" 4
.IX Item "--memory=n, -M n"
Allow \fBcwb-make\fR to use approx. \fIn\fR MBytes of \s-1RAM\s0 for indexing.
.IP "\-\-force, \-f" 4
.IX Item "--force, -f"
Silently overwrite an existing registry entry and/or data directory.  Use with caution, as this will remove all files from an existing data directory.
.IP "\-\-verbose, \-v" 4
.IX Item "--verbose, -v"
Show progress message for each individual attribute (recommended for large corpora).
.IP "\-\-help, \-h" 4
.IX Item "--help, -h"
Display short help page.
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
\&\fBcwb\-convert\-to\-utf8\fR requires at least version 3.5.0 of the \s-1CWB\s0 Core to be available. If you have installed multiple \s-1CWB\s0 releases on your computer, make sure that the CWB/Perl modules are configured to use an appropriate \s-1CWB\s0 version.
.PP
For efficiency reasons, character encodings are converted with the external \fBiconv\fR utility, which must be installed somewhere in the system path. Your version of \fBiconv\fR must support command line options \f(CW\*(C`\-f\*(C'\fR (source encoding), \f(CW\*(C`\-t\*(C'\fR (target encoding) and \f(CW\*(C`\-c\*(C'\fR (ignore conversion errors); it also needs to understand \s-1CWB\s0 style encoding names such as \f(CW\*(C`utf8\*(C'\fR and \f(CW\*(C`latin1\*(C'\fR. Suitable versions of \fBiconv\fR are provided by Linux and Mac \s-1OS X,\s0 and by any POSIX-conformant system.
.SH "BUGS"
.IX Header "BUGS"
Feature set attributes (\f(CW\*(C`|feat1|feat2|...|\*(C'\fR) containing non-ASCII characters may no longer be sorted correctly after the conversion.  This will only affect queries involving the built-in \f(CW\*(C`unify()\*(C'\fR function, though, which is rarely used in practice.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2007\-2022 Stephanie Evert [https://purl.org/stephanie.evert]
.PP
This software is provided \s-1AS IS\s0 and the author makes no warranty as to
its use and performance. You may use the software, redistribute and
modify it under the same terms as Perl itself.

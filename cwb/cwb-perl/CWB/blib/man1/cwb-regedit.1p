.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CWB-REGEDIT 1p"
.TH CWB-REGEDIT 1p "2023-06-22" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cwb\-regedit \- A simple command\-line editor for CWB registry files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  cwb\-regedit [options] (CORPUS | <filename>) <command> [<command> ...]
.Ve
.PP
Options:
.PP
.Vb 2
\&  \-r <dir>, \-\-registry=<dir>  use registry directory <dir> [system default]
\&  \-h, \-\-help                  display usage summary
.Ve
.PP
Commands:
.PP
.Vb 10
\&  :info
\&       print basic information about the registry entry
\&  (:id | :home | :name | :ifile) [<value>]
\&       print or set corpus ID (:id), data directory (:home),
\&       descriptive name (:name) or info file path (:ifile)
\&  :prop <property> [<value>]
\&       query or set corpus property
\&  :list (:p | :s | :a)
\&       list declared attributes of specified type
\&  :add (:p | :s | :a) <name>[=<path>] ...
\&       add positional, structural or alignment attributes
\&  :del <names>
\&       delete attributes of any type
.Ve
.PP
Command names are case-insensitive, and some intuitive abbreviations and variations
are allowed (but only the forms listed above are guaranteed to work).
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcwb-regedit\fR is a simple command-line editor for \s-1CWB\s0 registry files in \fBcanonical format\fR.
It allows you to display and modify header information, corpus properties and attribute declarations.
For more complex editing tasks (such as adding descriptive comments), use the functionality
provided by the \fB\s-1CWB\s0\fR module (see \*(L"\s-1REGISTRY FILE EDITING\*(R"\s0 in \s-1CWB\s0 manpage).
.PP
The first argument must be the name of a \s-1CWB\s0 registry file or a corpus \s-1ID.\s0
In the latter case, \fBcwb-regedit\fR will attempt to locate the corresponding registry file in
the system registry, or in a directory specified with the \f(CW\*(C`\-\-registry\*(C'\fR (\f(CW\*(C`\-r\*(C'\fR) option.
The remaining arguments are editing or display commands, which are applied to the registry entry in turn.
If any changes have been made, the modified registry file will be written back to disk automatically.
.PP
The following commands are currently supported:
.IP "\fB:info\fR" 4
.IX Item ":info"
Print basic information about the registry entry, including pathname of the registry file,
corpus \s-1ID,\s0 name, data directory and info file, as well as all corpus properties defined in the registry entry.
.IP "(\fB:id\fR | \fB:name\fR | \fB:home\fR | \fB:ifile\fR)" 4
.IX Item "(:id | :name | :home | :ifile)"
Display corpus header information (corpus \s-1ID,\s0 corpus name, data directory, info file).
.IP "(\fB:id\fR | \fB:name\fR | \fB:home\fR | \fB:ifile\fR) \fIvalue\fR" 4
.IX Item "(:id | :name | :home | :ifile) value"
Modify corpus header information (corpus \s-1ID,\s0 corpus name, data directory, info file).
Don't forget to quote \fIvalue\fR with single or double quotes if it contains whitespace or other special characters.
.IP "\fB:prop\fR \fIname\fR" 4
.IX Item ":prop name"
Display corpus property \fIname\fR.  If this property is not defined, \fBcwb-regedit\fR prints an
empty line and issues a warning message on \fBstderr\fR.
.IP "\fB:prop\fR \fIname\fR \fIvalue\fR" 4
.IX Item ":prop name value"
Modify or add corpus property \fIname\fR.  Don't forget to quote \fIvalue\fR if it contains whitespace or special characters.
.IP "\fB:list\fR (\fB:p\fR | \fB:s\fR | \fB:a\fR) ..." 4
.IX Item ":list (:p | :s | :a) ..."
List all attributes of the specified type: \fB:p\fR for positional attributes, \fB:s\fR for structural attributes, 
and \fB:a\fR for alignment attributes.  Attribute names are printed on a single line separated by blanks.
You can specify multiple attribute types without repeating the \fB:list\fR keyword, e.g. \f(CW\*(C`:list :p :s\*(C'\fR.
.IP "\fB:add\fR (\fB:p\fR | \fB:s\fR | \fB:a\fR) \fIname\fR ... [ (\fB:p\fR | \fB:s\fR | \fB:a\fR) \fIname\fR ... ]" 4
.IX Item ":add (:p | :s | :a) name ... [ (:p | :s | :a) name ... ]"
Add one or more attribute declarations to the registry entry.  The attribute type is indicated by 
\&\fB:p\fR (positional), \fB:s\fR (structural) or \fB:a\fR (alignment), followed by the names of the new attributes.
For structural attributes, the same extended specifications are supported as in the \fBcwb-encode\fR program
(see the cwb-encode manpage and the \fICorpus Encoding Tutorial\fR for details).
.Sp
A separate data directory for each attribute can be appended to the attribute name in the form \fIname\fR=\fIpath\fR.
For example, the command \f(CW\*(C`:add :s np:1+h=/ext_data/corpora/gigaword\*(C'\fR would declare 4 s\-attributes named
\&\f(CW\*(C`np\*(C'\fR, \f(CW\*(C`np_h\*(C'\fR, \f(CW\*(C`np1\*(C'\fR and \f(CW\*(C`np_h1\*(C'\fR and set their data path to \fI/ext_data/corpora/gigaword\fR.
.IP "\fB:del\fR \fIname\fR ..." 4
.IX Item ":del name ..."
Delete attribute declarations, regardless of attribute type.  Note that the corresponding data files
will not automatically be deleted.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2002\-2022 Stephanie Evert [https://purl.org/stephanie.evert]
.PP
This software is provided \s-1AS IS\s0 and the author makes no warranty as to
its use and performance. You may use the software, redistribute and
modify it under the same terms as Perl itself.
